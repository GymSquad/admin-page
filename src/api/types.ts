/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/": {
    /**
     * Ping
     * @description Ping the API to check if it's alive.
     */
    get: operations["ping__get"];
  };
  "/api/website/{website_id}": {
    /** Get Archived Dates */
    get: operations["get_archived_dates_api_website__website_id__get"];
    /** Update Website */
    patch: operations["update_website_api_website__website_id__patch"];
  };
  "/api/website/search": {
    /** Search Websites */
    get: operations["search_websites_api_website_search_get"];
  };
};

export type webhooks = Record<string, never>;

export type components = {
  schemas: {
    /** Affiliation */
    Affiliation: {
      /**
       * Campus
       * @description Campus name
       */
      campus: string;
      /**
       * Department
       * @description Department name
       */
      department: string;
      /**
       * Office
       * @description Office name
       */
      office: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Pagination */
    Pagination: {
      /**
       * Next Cursor
       * @description Cursor for the next page
       */
      next_cursor?: string | null;
      /**
       * Num Results
       * @description Number of results in this page
       */
      num_results: number;
      /**
       * Num Left
       * @description Number of results left
       */
      num_left: number;
    };
    /** PingResponse */
    PingResponse: {
      /**
       * Message
       * @default Server is up and running üöÄ
       */
      message?: string;
    };
    /**
     * SearchResponse
     * @example {
     *   "pagination": {
     *     "next_cursor": "KGNhbXB1c19pZD1jbHJuYzFtdDcwMDAxMDhsMjF3aGk5eTRyLGRlcGFydG1lbnRfaWQ9Y2xybmMxdGR1MDAwMjA4bDJkbTJoY2ltaSxvZmZpY2VfaWQ9Y2xybmMxd3gwMDAwMzA4bDJoOXN0N2FhYyx3ZWJzaXRlX2lkPWNscm5jMTRkcjAwMDAwOGwyMzVneDRjNmMp",
     *     "num_results": 1,
     *     "total_results": 10
     *   },
     *   "result": [
     *     {
     *       "campus": "‰∫§Â§ßÁõ∏Èóú",
     *       "department": "Ë°åÊîøÂñÆ‰Ωç",
     *       "id": "clrnc1mt7000108l21whi9y4r$clrnc1tdu000208l2dm2hcimi$clrnc1wx0000308l2h9st7aac",
     *       "office": "ÂúñÊõ∏È§®",
     *       "websites": [
     *         {
     *           "id": "clrnc14dr000008l235gx4c6c",
     *           "name": "‰∫§ÈÄöÂ§ßÂ≠∏ÂúñÊõ∏È§®",
     *           "url": "https://www.lib.nctu.edu.tw/"
     *         }
     *       ]
     *     }
     *   ]
     * }
     */
    SearchResponse: {
      /**
       * Result
       * @description The search result
       */
      result: components["schemas"]["SearchResultEntry"][];
      /** @description Pagination information */
      pagination: components["schemas"]["Pagination"];
    };
    /** SearchResultEntry */
    SearchResultEntry: {
      /**
       * Id
       * @description Compound ID of the website
       */
      id: string;
      /**
       * Campus
       * @description Campus name
       */
      campus: string;
      /**
       * Department
       * @description Department name
       */
      department: string;
      /**
       * Office
       * @description Office name
       */
      office: string;
      /**
       * Websites
       * @description The websites that match the query
       */
      websites: components["schemas"]["SearchResultWebsite"][];
    };
    /** SearchResultWebsite */
    SearchResultWebsite: {
      /**
       * Id
       * @description The ID of the website
       */
      id: string;
      /**
       * Name
       * @description The name of the website
       */
      name: string;
      /**
       * Url
       * Format: uri
       * @description The URL of the website
       */
      url: string;
    };
    /**
     * UpdateResponse
     * @example {
     *   "affiliations": [
     *     {
     *       "campus": "‰∫§Â§ßÁõ∏Èóú",
     *       "department": "Ë°åÊîøÂñÆ‰Ωç",
     *       "office": "ÂúñÊõ∏È§®"
     *     }
     *   ],
     *   "id": "clrnc14dr000008l235gx4c6c",
     *   "name": "‰∫§ÈÄöÂ§ßÂ≠∏ÂúñÊõ∏È§®",
     *   "url": "https://www.lib.nctu.edu.tw/"
     * }
     */
    UpdateResponse: {
      /**
       * Id
       * @description The ID of the website
       */
      id: string;
      /**
       * Name
       * @description The name of the website
       */
      name: string;
      /**
       * Url
       * Format: uri
       * @description The URL of the website
       */
      url: string;
      /**
       * Affiliations
       * @description The affiliations of the website
       */
      affiliations: components["schemas"]["Affiliation"][];
    };
    /**
     * UpdateWebsitePayload
     * @example {
     *   "affiliations": [
     *     {
     *       "campus": "‰∫§Â§ßÁõ∏Èóú",
     *       "department": "Ë°åÊîøÂñÆ‰Ωç",
     *       "office": "ÂúñÊõ∏È§®"
     *     }
     *   ],
     *   "name": "‰∫§ÈÄöÂ§ßÂ≠∏ÂúñÊõ∏È§®",
     *   "url": "https://www.lib.nctu.edu.tw/"
     * }
     */
    UpdateWebsitePayload: {
      /**
       * Affiliations
       * @description The affiliations of the website
       * @default []
       */
      affiliations?: components["schemas"]["Affiliation"][];
      /**
       * Name
       * @description The name of the website
       */
      name?: string | null;
      /**
       * Url
       * @description The URL of the website
       */
      url?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = {
  /**
   * Ping
   * @description Ping the API to check if it's alive.
   */
  ping__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PingResponse"];
        };
      };
    };
  };
  /** Get Archived Dates */
  get_archived_dates_api_website__website_id__get: {
    parameters: {
      path: {
        website_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Website */
  update_website_api_website__website_id__patch: {
    parameters: {
      path: {
        website_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateWebsitePayload"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UpdateResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Search Websites */
  search_websites_api_website_search_get: {
    parameters: {
      query?: {
        q?: string | null;
        /** @description Cursor for pagination (in base64) */
        cursor?: string | null;
        limit?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SearchResponse"];
        };
      };
      /** @description Invalid parameters */
      400: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
};
